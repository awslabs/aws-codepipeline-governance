# Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys S3 Bucket and KMS Key for the use of the SAM deployment

Resources:
  # -----
  # KMS
  # -----
  rSAMKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by the SAM S3 Bucket.
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allow access for Key Administrators
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: "*"

  rSAMKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/Serverless-Application
      TargetKeyId: !Ref rSAMKmsKey

  # -----
  # S3
  # -----
  rSAMBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub sam-${AWS::AccountId}-${AWS::Region}
      AccessControl: BucketOwnerFullControl
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref rSAMKmsKey
              SSEAlgorithm: aws:kms
      VersioningConfiguration:
        Status: Enabled

  rSAMBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref rSAMBucket
      PolicyDocument:
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: s3:PutObject
            Resource: !Sub ${rSAMBucket.Arn}/*
            Condition:
              StringNotEquals:
                s3:x-amz-server-side-encryption: aws:kms
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: s3:*
            Resource: !Sub ${rSAMBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
          - Sid: DisableSigV2
            Effect: Deny
            Principal: '*'
            Action: s3:*
            Resource:
              - !Sub ${rSAMBucket.Arn}/*
              - !Sub ${rSAMBucket.Arn}
            Condition:
              StringEquals:
                s3:signatureversion: AWS